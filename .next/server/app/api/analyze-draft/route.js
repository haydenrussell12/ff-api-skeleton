"use strict";(()=>{var e={};e.id=47,e.ids=[47],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},260:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>y,patchFetch:()=>P,requestAsyncStorage:()=>h,routeModule:()=>g,serverHooks:()=>D,staticGenerationAsyncStorage:()=>m});var o={};a.r(o),a.d(o,{GET:()=>f,POST:()=>u,runtime:()=>p});var r=a(9303),s=a(8716),l=a(670),n=a(7070);class i{getRosterRequirements(e="standard"){let t={standard:{QB:1,RB:2,WR:2,TE:1,FLEX:1,K:1,DEF:1,totalStarters:9,flexPositions:["RB","WR","TE"]},superflex:{QB:1,RB:2,WR:2,TE:1,FLEX:1,SUPERFLEX:1,K:1,DEF:1,totalStarters:10,flexPositions:["RB","WR","TE"],superflexPositions:["QB","RB","WR","TE"]},"2qb":{QB:2,RB:2,WR:2,TE:1,FLEX:1,K:1,DEF:1,totalStarters:10,flexPositions:["RB","WR","TE"]}};return t[e]||t.standard}calculateOptimalLineup(e,t={}){let a=t.leagueType||"standard",o=this.getRosterRequirements(a),r=this.groupPlayersByPosition(e),s={},l=new Set;if(Object.entries(o).forEach(([e,t])=>{if("totalStarters"!==e&&"flexPositions"!==e&&"superflexPositions"!==e&&"number"==typeof t&&t>0){s[e]=[];let a=(r[e]||[]).filter(e=>!l.has(e.playerId||e.playerName)).sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0)).slice(0,t);s[e]=a,a.forEach(e=>l.add(e.playerId||e.playerName))}}),o.flexPositions){let e=o.flexPositions.flatMap(e=>(r[e]||[]).filter(e=>!l.has(e.playerId||e.playerName)));if(e.length>0){let t=e.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0];t&&(s.FLEX=[t],l.add(t.playerId||t.playerName))}}if("superflexPositions"in o&&o.superflexPositions&&"superflex"===a){let e=o.superflexPositions.flatMap(e=>(r[e]||[]).filter(e=>!l.has(e.playerId||e.playerName)));if(e.length>0){let t=e.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0];t&&(s.SUPERFLEX=[t],l.add(t.playerId||t.playerName))}}return s}groupPlayersByPosition(e){let t={};return e.forEach(e=>{let a=(e.position||"").toUpperCase();a&&(t[a]||(t[a]=[]),t[a].push(e))}),t}getBenchPlayers(e,t){let a=new Set;return Object.values(t).forEach(e=>{Array.isArray(e)&&e.forEach(e=>{a.add(e.playerId||e.playerName)})}),e.filter(e=>!a.has(e.playerId||e.playerName))}calculateTotalProjectedPoints(e){if(Array.isArray(e))return e.reduce((e,t)=>e+(t.projectedPoints||0),0);let t=0;return Object.values(e).forEach(e=>{Array.isArray(e)&&(t+=e.reduce((e,t)=>e+(t.projectedPoints||0),0))}),t}analyzeLineup(e,t={}){let a=t.leagueType||"standard",o=this.getRosterRequirements(a);return{totalStarters:o.totalStarters,leagueType:a,requirements:o,positionCounts:Object.entries(o).filter(([e])=>!["totalStarters","flexPositions","superflexPositions"].includes(e)).reduce((e,[t,a])=>({...e,[t]:a}),{})}}}class c{constructor(e=[]){this.vorpLookup={},this.leagueAverages={},this.leagueStdDevs={},e.forEach(e=>{let t=(e.playerName||"").toLowerCase(),a=e.vorpScore??e.vorp_score??0;t&&(this.vorpLookup[t]=Number(a))})}calculatePositionGrades(e,t={}){let a=t.leagueType||"standard",o=this.getPositionRequirements(a);return this.calculateLeagueStats(e,o),e.map(e=>{let t=this.calculateTeamPositionGrades(e,o),a=this.calculateOverallGrade(e,t);return{...e,positionGrades:t,overallGrade:a}})}calculateTeamPositionGrades(e,t){let a={};return t.forEach(t=>{if("FLEX"===t||"SUPERFLEX"===t){let o=this.getFlexPlayers(e,t);if(o.length>0){let e=this.gradePosition(o,t);a[t]=e}}else{let o=this.getPositionPlayers(e,t);if(o.length>0){let e=this.gradePosition(o,t);a[t]=e}}}),a}getFlexPlayers(e,t){let a=[];return("SUPERFLEX"===t?["QB","RB","WR","TE"]:["RB","WR","TE"]).forEach(t=>{let o=this.getPositionPlayers(e,t);a.push(...o)}),a.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0)).slice(0,3)}getPositionPlayers(e,t){return e.optimalLineup&&e.optimalLineup[t]&&e.optimalLineup[t]||[]}gradePosition(e,t){if(0===e.length)return{grade:"‚Äî",score:0,reason:"No players"};let a=e.reduce((e,t)=>e+(t.projectedPoints||0),0),o=e.reduce((e,t)=>e+(t.vorpScore||0),0)/e.length,r=this.leagueAverages[t]||0,s=this.leagueStdDevs[t]||1,l=s>0?(a-r)/s:0,n=this.zScoreToGrade(l);return{grade:n,score:a,zScore:l,avgVorp:o,reason:this.generatePositionReason(n,l,t)}}calculateOverallGrade(e,t){let a={QB:1.2,RB:1,WR:1,TE:.9,FLEX:.8,SUPERFLEX:1.1,K:.3,DEF:.4},o=0,r=0;if(Object.entries(t).forEach(([e,t])=>{if(t&&"‚Äî"!==t.grade){let s=a[e]||1,l=this.gradeToScore(t.grade);o+=l*s,r+=s}}),0===r)return{grade:"‚Äî",score:0};let s=o/r;return{grade:this.scoreToGrade(s),score:s,totalWeightedScore:o,totalWeight:r}}zScoreToGrade(e){return e>=1.5?"A+":e>=1?"A":e>=.5?"B+":e>=0?"B":e>=-.5?"C+":e>=-1?"C":e>=-1.5?"D+":e>=-2?"D":"F"}gradeToScore(e){return({"A+":95,A:90,"A-":85,"B+":80,B:75,"B-":70,"C+":65,C:60,"C-":55,"D+":50,D:45,"D-":40,F:30})[e]||50}scoreToGrade(e){return e>=90?"A+":e>=85?"A":e>=80?"A-":e>=75?"B+":e>=70?"B":e>=65?"B-":e>=60?"C+":e>=55?"C":e>=50?"C-":e>=45?"D+":e>=40?"D":e>=35?"D-":"F"}generatePositionReason(e,t,a){return e.startsWith("A")?`Excellent ${a} performance`:e.startsWith("B")?`Good ${a} performance`:e.startsWith("C")?`Average ${a} performance`:e.startsWith("D")?`Below average ${a} performance`:`Poor ${a} performance`}calculateLeagueStats(e,t){let a={};t.forEach(e=>{a[e]={points:[],vorp:[]}}),e.forEach(e=>{(e.roster||[]).forEach(e=>{let t=(e.position||"").toUpperCase();if(!t||!a[t])return;let o=e.projectedPoints||0,r=this.getPlayerVorp(e.playerName||e.name||"");a[t].points.push(o),a[t].vorp.push(r)})}),Object.keys(a).forEach(e=>{let t=a[e].points.filter(e=>e>0),o=a[e].vorp.filter(e=>0!==e);t.length>0&&(this.leagueAverages[e]=t.reduce((e,t)=>e+t,0)/t.length,this.leagueStdDevs[e]=this.calculateStdDev(t,this.leagueAverages[e])),o.length>0&&(this.leagueAverages[`${e}_VORP`]=o.reduce((e,t)=>e+t,0)/o.length,this.leagueStdDevs[`${e}_VORP`]=this.calculateStdDev(o,this.leagueAverages[`${e}_VORP`]))})}calculateStdDev(e,t){return e.length<=1?0:Math.sqrt(e.reduce((e,a)=>e+Math.pow(a-t,2),0)/e.length)}getPlayerVorp(e){if(!e)return 0;let t=e.toLowerCase();return this.vorpLookup[t]||0}getPositionRequirements(e="standard"){let t={standard:["QB","RB","WR","TE","FLEX","K","DEF"],superflex:["QB","RB","WR","TE","FLEX","SUPERFLEX","K","DEF"],"2qb":["QB","RB","WR","TE","FLEX","K","DEF"]};return t[e]||t.standard}}let p="nodejs";class d{async initialize(){try{console.log("\uD83D\uDE80 Initializing Draft Analyzer...");let[e,t,o,r]=await Promise.all([a.e(297).then(a.t.bind(a,9297,19)),a.e(266).then(a.t.bind(a,1266,19)),a.e(101).then(a.t.bind(a,101,19)),a.e(865).then(a.t.bind(a,5865,19))]);console.log("\uD83D\uDD0D Loaded modules:",{masterPlayers:!!e,nameLookup:!!t,vorpData:!!o,adpData:!!r});let s=e.default.players;console.log("\uD83D\uDD0D Master players structure:",{hasDefault:!!e.default,hasPlayers:!!s,playerCount:s?.length||0,samplePlayer:s?.[0]}),this.consolidatedData={},s.forEach(e=>{e.full_name&&(this.consolidatedData[e.full_name.toLowerCase()]=e,e.player_id&&(this.consolidatedData[e.player_id.toLowerCase()]=e))}),this.nameLookupIndex=t.default,this.vorpData=o.default.vorpScores||o.default,this.adpData={};let l=r.default.players||[];console.log("\uD83D\uDD0D ADP data structure:",{hasDefault:!!r.default,hasPlayers:!!l,playerCount:l?.length||0,samplePlayer:l?.[0]}),l.forEach(e=>{e.full_name&&(this.adpData[e.full_name.toLowerCase()]=e)}),console.log(`‚úÖ Draft Analyzer initialized with ${Object.keys(this.consolidatedData).length} players and ${Object.keys(this.adpData).length} ADP records.`),console.log(`üîç Sample consolidated players:`,Object.keys(this.consolidatedData).slice(0,5)),console.log(`üîç Sample ADP players:`,Object.keys(this.adpData).slice(0,5))}catch(e){throw console.error("‚ùå Failed to initialize Draft Analyzer:",e),Error("Failed to load necessary data for analysis.")}}async fetchSleeperApi(e){let t=await fetch(e);if(!t.ok)throw Error(`Failed to fetch from Sleeper API: ${t.statusText}`);return t.json()}parseSleeperDraftUrl(e){let t=e.match(/sleeper\.(?:com|app)\/draft\/nfl\/([a-zA-Z0-9]+)/);if(!t||!t[1])throw Error("Invalid Sleeper mock draft URL format. Expected format: https://sleeper.app/draft/nfl/{draft_id}");return t[1]}normalizePlayerName(e){return e?e.toLowerCase().replace(/\s+(jr\.?|sr\.?|ii|iii|iv|v|vi|vii|viii|ix|x)\s*$/i,"").replace(/\s+/g," ").trim():""}findPlayerByName(e,t){if(!e)return null;let a=this.normalizePlayerName(e);console.log(`üîç Looking for player: "${e}" -> normalized: "${a}"`);let o=this.consolidatedData[a];if(o)return console.log(`‚úÖ Found exact match: ${e}`),o;if(o=this.consolidatedData[e.toLowerCase()])return console.log(`‚úÖ Found exact match with original name: ${e}`),o;let r=a.split(" ");if(r.length>=2){let t=r[0],a=r[r.length-1];for(let[o,r]of(console.log(`üîç Trying fuzzy match: firstName="${t}", lastName="${a}"`),Object.entries(this.consolidatedData))){let s=o.split(" ");if(s.length>=2){let l=s[0],n=s[s.length-1];if(l===t&&n===a)return console.log(`‚úÖ Found fuzzy match: "${e}" -> "${o}"`),r}}}for(let[t,o]of Object.entries(this.consolidatedData))if(t.includes(a)||a.includes(t))return console.log(`‚úÖ Found partial match: "${e}" -> "${t}"`),o;return console.log(`‚ùå No match found for: ${e}`),console.log(`üîç Available players starting with similar names:`,Object.keys(this.consolidatedData).filter(e=>e.includes(a.split(" ")[0])).slice(0,5)),null}getPlayerProjectedPoints(e,t){let a=this.findPlayerByName(e,t);if(!a||!a.projections)return console.log(`‚ö†Ô∏è No player or projections found for: ${e} (${t})`),0;let o=t?.toLowerCase();console.log(`üîç Looking for projections for ${e} at position: ${o}`),console.log(`üîç Available projection keys:`,Object.keys(a.projections));let r=0;if("def"===o||"defense"===o){for(let t of(console.log(`üõ°Ô∏è Processing DEFENSE player: ${e}`),["def","DEF","defense","Defense","DEFENSE"]))if(a.projections[t]?.fpts){r=a.projections[t].fpts,console.log(`‚úÖ Found defense projections using key: ${t} = ${r}`);break}if(!r){for(let e of Object.keys(a.projections))if(e.toLowerCase().includes("def")){r=a.projections[e].fpts,console.log(`‚úÖ Found defense projections using partial key: ${e} = ${r}`);break}}if(!r)for(let e of Object.keys(a.projections)){let t=a.projections[e];if(t&&"object"==typeof t&&t.fpts){r=t.fpts,console.log(`‚úÖ Found defense projections using generic key: ${e} = ${r}`);break}}if(!r)for(let e of Object.keys(a.projections)){let t=a.projections[e];if("number"==typeof t&&t>0){r=t,console.log(`‚úÖ Found defense projections using numeric key: ${e} = ${r}`);break}}!r&&"number"==typeof a.projections&&a.projections>0&&(r=a.projections,console.log(`‚úÖ Found defense projections as direct number: ${r}`))}else r=a.projections[o]?.fpts;return r?(console.log(`‚úÖ Projected points for ${e}: ${r}`),"number"==typeof r?r:parseFloat(r)):(console.log(`‚ùå No projected points found for ${e} at position ${o}`),console.log(`üîç Player projections structure:`,a.projections),0)}getPlayerAdp(e){if(!this.findPlayerByName(e,""))return 0;let t=this.normalizePlayerName(e),a=this.adpData[t];if(!a){let e=t.split(" ");if(e.length>=2){let t=e[0],o=e[e.length-1];for(let[e,r]of Object.entries(this.adpData)){let s=e.split(" ");if(s.length>=2){let e=s[0],l=s[s.length-1];if(e===t&&l===o){a=r;break}}}}}let o=a?.adp_value;return o?parseFloat(o):0}getPlayerVorp(e){let t=this.normalizePlayerName(e);if(!t)return 0;let a=Array.isArray(this.vorpData)?this.vorpData.find(e=>this.normalizePlayerName(e.playerName||"")===t):void 0;return a?.vorp_score||a?.vorpScore?parseFloat(a.vorp_score||a.vorpScore):0}async analyzeDraft(e,t="standard"){await this.initialize();let a=this.parseSleeperDraftUrl(e);console.log(`Analyzing draft ID: ${a}`);let o=await this.fetchSleeperApi(`https://api.sleeper.app/v1/draft/${a}`),r=await this.fetchSleeperApi(`https://api.sleeper.app/v1/draft/${a}/picks`);console.log("\uD83D\uDD0D Draft data:",{id:o.id,type:o.type,status:o.status,metadata:o.metadata,settings:o.settings,league_id:o.league_id,slot_to_roster_id:o.slot_to_roster_id});let s={},l=o.slot_to_roster_id;if(!l)throw Error("No slot_to_roster_id found in draft data - this may not be a mock draft");if(console.log("\uD83E\uDDE0 Using smart username detection..."),console.log("\uD83D\uDD0D Draft type:",o.type),console.log("\uD83D\uDD0D Draft status:",o.status),console.log("\uD83D\uDD0D Draft metadata keys:",Object.keys(o.metadata||{})),console.log("\uD83D\uDD0D Draft settings keys:",Object.keys(o.settings||{})),"mock"===o.type||"complete"===o.status){for(let e of(console.log("\uD83D\uDD0D This appears to be a mock draft, extracting usernames from picks..."),r||[]))if(e.metadata&&Object.keys(e.metadata).length>0){let t=String(e.draft_slot);console.log(`üîç Pick ${e.draft_slot} metadata:`,e.metadata);let a=e.metadata.user_id||e.metadata.username||e.metadata.display_name||e.metadata.name||e.metadata.user;a&&!s[t]&&(s[t]=a,console.log(`‚úÖ Found username for slot ${t}: ${a}`))}}if(0===Object.keys(s).length&&o.metadata?.draft_order){console.log("\uD83D\uDD0D Checking draft metadata for user order...");let e=o.metadata.draft_order;console.log("\uD83D\uDD0D Draft order from metadata:",e),Array.isArray(e)&&e.forEach((e,t)=>{if(e&&"string"==typeof e&&e.trim()){let a=String(t);s[a]=e.trim(),console.log(`‚úÖ Metadata mapped slot ${a} to: ${e.trim()}`)}})}if(0===Object.keys(s).length&&o.metadata?.team_names){console.log("\uD83D\uDD0D Checking for team names in metadata...");let e=o.metadata.team_names;console.log("\uD83D\uDD0D Team names from metadata:",e),Array.isArray(e)&&e.forEach((e,t)=>{if(e&&"string"==typeof e&&e.trim()){let a=String(t);s[a]=e.trim(),console.log(`‚úÖ Team names mapped slot ${a} to: ${e.trim()}`)}})}if(0===Object.keys(s).length&&o.settings)for(let e of(console.log("\uD83D\uDD0D Checking draft settings for user info..."),Object.keys(o.settings))){let t=o.settings[e];if(Array.isArray(t)&&t.length>0&&"string"==typeof t[0]&&(console.log(`üîç Found potential user array in settings.${e}:`,t),t.length===Object.keys(l).length)){t.forEach((e,t)=>{if(e&&"string"==typeof e&&e.trim()){let a=String(t);s[a]=e.trim(),console.log(`‚úÖ Settings mapped slot ${a} to: ${e.trim()}`)}});break}}if(0===Object.keys(s).length&&o.metadata){for(let[e,t]of(console.log("\uD83D\uDD0D Checking all metadata fields for potential usernames..."),Object.entries(o.metadata)))if(Array.isArray(t)&&t.length>0&&"string"==typeof t[0]&&(console.log(`üîç Found array in metadata.${e}:`,t),t.length===Object.keys(l).length&&t.every(e=>"string"==typeof e&&e.trim().length>0&&(e.includes("@")||e.length>3)))){t.forEach((t,a)=>{let o=String(a);s[o]=t.trim(),console.log(`‚úÖ Metadata.${e} mapped slot ${o} to: ${t.trim()}`)});break}}if(0===Object.keys(s).length)for(let e of(console.log("\uD83D\uDD0D Checking for any other potential username sources..."),Object.keys(o))){let t=o[e];if(Array.isArray(t)&&t.length>0&&"string"==typeof t[0]&&(console.log(`üîç Found array in draft.${e}:`,t),t.length===Object.keys(l).length)){t.forEach((t,a)=>{if(t&&"string"==typeof t&&t.trim()){let o=String(a);s[o]=t.trim(),console.log(`‚úÖ Draft.${e} mapped slot ${o} to: ${t.trim()}`)}});break}}0===Object.keys(s).length&&(console.log("\uD83D\uDD0D No usernames found, generating mock usernames..."),Object.keys(l).forEach(e=>{let t=parseInt(e,10);s[e]=`DraftSlot${t+1}`,console.log(`üé≠ Generated mock username for slot ${e}: DraftSlot${t+1}`)})),console.log("\uD83D\uDD0D Final slot to name mapping:",s),console.log("\uD83D\uDD0D Slot to roster mapping:",l),console.log("\uD83D\uDCCA USERNAME DETECTION SUMMARY:"),console.log(`   Total slots: ${Object.keys(l).length}`),console.log(`   Slots with names: ${Object.keys(s).length}`),console.log(`   Slots without names: ${Object.keys(l).length-Object.keys(s).length}`),0===Object.keys(s).length?(console.log("‚ùå NO USERNAMES FOUND - All strategies failed"),console.log("\uD83D\uDD0D This suggests this may be a mock draft without user information")):(console.log("‚úÖ Usernames found:"),Object.entries(s).forEach(([e,t])=>{console.log(`   Slot ${e}: ${t}`)}));let n=await this.fetchSleeperApi("https://api.sleeper.app/v1/players/nfl"),p=e=>n?.[e],d={name:o.metadata?.name||`Draft ${a}`,teams:Object.keys(l).length,rounds:o.settings?.rounds||0,totalPicks:r?.length||0},u={};for(let e of(Object.entries(l).forEach(([e,t])=>{let a=s[String(e)]||`Team ${t}`;u[t]={teamId:t,teamName:a,draftSlot:parseInt(e,10),roster:[]},console.log(`üèà Created team ${t} for slot ${e} with name: "${a}"`)}),r||[])){let t=p(String(e.player_id));if(!t)continue;let a=t.full_name||`${t.first_name||""} ${t.last_name||""}`.trim(),o=t.position||e.metadata?.position||"";(o?.toLowerCase()==="def"||o?.toLowerCase()==="defense")&&console.log(`üõ°Ô∏è Processing DEFENSE player: ${a} at position: ${o}`);let r=this.getPlayerProjectedPoints(a,o),s=this.getPlayerAdp(a),n=this.getPlayerVorp(a),i=s>0?s-e.draft_slot:0,c={...e,metadata:t,playerName:a,position:o,projectedPoints:r,adpValue:s,vorpScore:n,draftValue:i,playerId:e.player_id},d=l[String(e.draft_slot)];d&&u[d]&&u[d].roster.push(c)}let f=new i,g=new c(Array.isArray(this.vorpData)?this.vorpData:[]),h=Object.entries(u).map(([e,a])=>{let o=f.calculateOptimalLineup(a.roster,{leagueType:t,scoring:"ppr"}),r=a.roster.map(e=>e.adpValue||0).filter(e=>0!==e),s=r.length>0?r.reduce((e,t)=>e+t,0)/r.length:0,l=a.roster.map(e=>e.vorpScore||0).filter(e=>0!==e),n=l.length>0?l.reduce((e,t)=>e+t,0)/l.length:0,i=f.calculateTotalProjectedPoints(o),c=f.getBenchPlayers(a.roster,o),p=f.calculateTotalProjectedPoints(c),d=f.analyzeLineup(o,{leagueType:t,scoring:"ppr"});return{teamId:e,teamName:a.teamName,draftSlot:a.draftSlot,roster:a.roster,optimalLineup:o,optimalLineupPoints:i,benchPlayers:c,benchPoints:p,totalProjectedPoints:a.totalProjectedPoints,averageAdpValue:s,averageVorpScore:n,lineupAnalysis:d}});return{draftInfo:d,analysis:{teams:g.calculatePositionGrades(h,{leagueType:t,scoring:"ppr"}).map(e=>{let t=h.find(t=>t.teamId===e.teamId);return{teamId:e.teamId,teamName:e.teamName,draftSlot:t?.draftSlot||0,optimalLineup:t?.optimalLineup||{},optimalLineupPoints:t?.optimalLineupPoints||0,benchPlayers:t?.benchPlayers||[],benchPoints:t?.benchPoints||0,positionGrades:e.positionGrades||{},totalProjectedPoints:t?.totalProjectedPoints||0,averageProjectedPoints:t?.roster?.length?t.roster.reduce((e,t)=>e+(t.projectedPoints||0),0)/t.roster.length:0,averageAdpValue:t?.averageAdpValue||0,averageVorpScore:t?.averageVorpScore||0,players:t?.roster||[],roster:t?.roster||[]}})}}}constructor(){this.consolidatedData={},this.nameLookupIndex={},this.playerDetails={},this.vorpData={},this.adpData={}}}async function u(e){try{let{draftUrl:t,leagueType:a="standard"}=await e.json();if(!t)return n.NextResponse.json({success:!1,error:"Draft URL is required"});console.log("\uD83D\uDE80 Starting draft analysis..."),console.log("\uD83D\uDD0D Draft URL:",t),console.log("\uD83C\uDFC8 League Type:",a);let o=new d;await o.initialize();let r=await o.analyzeDraft(t,a);return n.NextResponse.json({success:!0,data:r})}catch(e){return console.error("‚ùå Error in draft analysis:",e),n.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error occurred"})}}function f(){return new Response("Method Not Allowed",{status:405,headers:{Allow:"POST"}})}let g=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/analyze-draft/route",pathname:"/api/analyze-draft",filename:"route",bundlePath:"app/api/analyze-draft/route"},resolvedPagePath:"/Users/kanikameister/Documents/ff_api_skeleton/app/api/analyze-draft/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:h,staticGenerationAsyncStorage:m,serverHooks:D}=g,y="/api/analyze-draft/route";function P(){return(0,l.patchFetch)({serverHooks:D,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),o=t.X(0,[276,972],()=>a(260));module.exports=o})();