"use strict";(()=>{var e={};e.id=47,e.ids=[47],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},260:(e,t,o)=>{o.r(t),o.d(t,{originalPathname:()=>D,patchFetch:()=>j,requestAsyncStorage:()=>m,routeModule:()=>h,serverHooks:()=>y,staticGenerationAsyncStorage:()=>g});var a={};o.r(a),o.d(a,{GET:()=>f,POST:()=>u,runtime:()=>p});var r=o(9303),s=o(8716),l=o(670),n=o(7070);class i{calculateOptimalLineup(e,t={}){let o={...this.defaultLeagueSettings,...t},a=this.groupPlayersByPosition(e),r=this.findOptimalLineup(a,o),s=this.calculateTotalProjectedPoints(r),l=this.getBenchPlayers(e,r),n=this.calculateTotalProjectedPoints(l);return{optimalLineup:r,totalProjectedPoints:s,benchPlayers:l,benchPoints:n,analysis:this.analyzeLineup(r,o)}}groupPlayersByPosition(e){let t={};return e.forEach(e=>{let o=(e.position||"").toUpperCase();o&&(t[o]||(t[o]=[]),t[o].push({...e,projectedPoints:e.projectedPoints||0}))}),Object.keys(t).forEach(e=>{t[e].sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))}),t}findOptimalLineup(e,t){let o={QB:[],RB:[],WR:[],TE:[],FLEX:[],DEF:[],K:[]};if(t.qb&&e.QB&&(o.QB=e.QB.slice(0,t.qb)),t.rb&&e.RB&&(o.RB=e.RB.slice(0,t.rb)),t.wr&&e.WR&&(o.WR=e.WR.slice(0,t.wr)),t.te&&e.TE&&(o.TE=e.TE.slice(0,t.te)),t.def&&e.DEF&&(o.DEF=e.DEF.slice(0,t.def)),t.k&&e.K&&(o.K=e.K.slice(0,t.k)),t.flex&&t.flex>0){let a=new Set;Object.values(o).forEach(e=>{(e||[]).forEach(e=>a.add(e.playerId||e.playerName||e.name))});let r=[];["RB","WR","TE"].forEach(t=>{(e[t]||[]).forEach(e=>{let t=e.playerId||e.playerName||e.name;a.has(t)||r.push(e)})}),t.superflex&&(e.QB||[]).forEach(e=>{let t=e.playerId||e.playerName||e.name;a.has(t)||r.push(e)}),r.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0)),o.FLEX=r.slice(0,t.flex)}return o}calculateTotalProjectedPoints(e){let t=0;return Array.isArray(e)?e.forEach(e=>t+=e.projectedPoints||0):Object.values(e).forEach(e=>{(e||[]).forEach(e=>t+=e.projectedPoints||0)}),Math.round(100*t)/100}getBenchPlayers(e,t){let o=new Set;return Object.values(t).forEach(e=>{(e||[]).forEach(e=>o.add(e.playerId||e.playerName||e.name))}),e.filter(e=>!o.has(e.playerId||e.playerName||e.name))}analyzeLineup(e,t){let o={};Object.keys(e).forEach(t=>o[t]=(e[t]||[]).length);let a=[];return(e.RB||[]).length<(t.rb||0)&&a.push({type:"depth",message:"Consider adding RB depth.",priority:"medium"}),(e.WR||[]).length<(t.wr||0)&&a.push({type:"depth",message:"Consider adding WR depth.",priority:"medium"}),{positionBreakdown:o,recommendations:a}}constructor(){this.defaultLeagueSettings={qb:1,rb:2,wr:2,te:1,flex:1,def:1,k:1,superflex:!1,scoring:"ppr"}}}class c{constructor(e=[]){this.vorpLookup={},e.forEach(e=>{let t=(e.playerName||"").toLowerCase(),o=e.vorpScore??e.vorp_score??0;t&&(this.vorpLookup[t]=Number(o)||0)})}calculatePositionGrades(e,t={}){let o={};(e.roster||[]).forEach(e=>{let t=(e.position||"").toUpperCase();t&&(o[t]||(o[t]=[]),o[t].push(e))});let a=[];["RB","WR","TE"].forEach(e=>{o[e]&&a.push(...o[e])}),a.length>0&&(o.FLEX=a);let r={};Object.keys(o).forEach(e=>{let t=o[e],a=0,s=0;t.forEach(e=>{s+=e.projectedPoints||0;let t=(e.playerName||e.name||"").toLowerCase();a+=this.vorpLookup[t]||0});let l=Math.max(0,.6*a+.02*s);r[e]={score:l,grade:this.scoreToGrade(l),projectedPoints:s,playerCount:t.length}});let s=Object.values(r).reduce((e,t)=>e+(t.score||0),0)/Math.max(1,Object.keys(r).length);return{overallGrade:{grade:this.scoreToGrade(s),score:s},positionGrades:r,recommendations:this.generateRecommendations(r)}}scoreToGrade(e){return e>=95?"A+":e>=90?"A":e>=80?"A-":e>=70?"B+":e>=60?"B":e>=50?"B-":e>=40?"C+":e>=30?"C":e>=20?"C-":e>=10?"D":"F"}generateRecommendations(e){let t=[],o=null,a=1/0;return Object.entries(e).forEach(([e,t])=>{t.score<a&&(a=t.score,o=e)}),o&&t.push({type:"weakness",priority:"high",message:`Focus on improving ${o}`}),t}}let p="nodejs";class d{async initialize(){try{console.log("\uD83D\uDE80 Initializing Draft Analyzer...");let[e,t,a,r]=await Promise.all([o.e(297).then(o.t.bind(o,9297,19)),o.e(266).then(o.t.bind(o,1266,19)),o.e(101).then(o.t.bind(o,101,19)),o.e(865).then(o.t.bind(o,5865,19))]);console.log("\uD83D\uDD0D Loaded modules:",{masterPlayers:!!e,nameLookup:!!t,vorpData:!!a,adpData:!!r});let s=e.default.players;console.log("\uD83D\uDD0D Master players structure:",{hasDefault:!!e.default,hasPlayers:!!s,playerCount:s?.length||0,samplePlayer:s?.[0]}),this.consolidatedData={},s.forEach(e=>{e.full_name&&(this.consolidatedData[e.full_name.toLowerCase()]=e,e.player_id&&(this.consolidatedData[e.player_id.toLowerCase()]=e))}),this.nameLookupIndex=t.default,this.vorpData=a.default.vorpScores||a.default,this.adpData={};let l=r.default.players||[];console.log("\uD83D\uDD0D ADP data structure:",{hasDefault:!!r.default,hasPlayers:!!l,playerCount:l?.length||0,samplePlayer:l?.[0]}),l.forEach(e=>{e.full_name&&(this.adpData[e.full_name.toLowerCase()]=e)}),console.log(`✅ Draft Analyzer initialized with ${Object.keys(this.consolidatedData).length} players and ${Object.keys(this.adpData).length} ADP records.`),console.log(`🔍 Sample consolidated players:`,Object.keys(this.consolidatedData).slice(0,5)),console.log(`🔍 Sample ADP players:`,Object.keys(this.adpData).slice(0,5))}catch(e){throw console.error("❌ Failed to initialize Draft Analyzer:",e),Error("Failed to load necessary data for analysis.")}}async fetchSleeperApi(e){let t=await fetch(e);if(!t.ok)throw Error(`Failed to fetch from Sleeper API: ${t.statusText}`);return t.json()}parseSleeperDraftUrl(e){let t=e.match(/sleeper\.(?:com|app)\/draft\/nfl\/([a-zA-Z0-9]+)/);if(!t||!t[1])throw Error("Invalid Sleeper mock draft URL format. Expected format: https://sleeper.app/draft/nfl/{draft_id}");return t[1]}normalizePlayerName(e){return e?e.toLowerCase().replace(/\s+(jr\.?|sr\.?|ii|iii|iv|v|vi|vii|viii|ix|x)\s*$/i,"").replace(/\s+/g," ").trim():""}findPlayerByName(e,t){if(!e)return null;let o=this.normalizePlayerName(e);console.log(`🔍 Looking for player: "${e}" -> normalized: "${o}"`);let a=this.consolidatedData[o];if(a)return console.log(`✅ Found exact match: ${e}`),a;if(a=this.consolidatedData[e.toLowerCase()])return console.log(`✅ Found exact match with original name: ${e}`),a;let r=o.split(" ");if(r.length>=2){let t=r[0],o=r[r.length-1];for(let[a,r]of(console.log(`🔍 Trying fuzzy match: firstName="${t}", lastName="${o}"`),Object.entries(this.consolidatedData))){let s=a.split(" ");if(s.length>=2){let l=s[0],n=s[s.length-1];if(l===t&&n===o)return console.log(`✅ Found fuzzy match: "${e}" -> "${a}"`),r}}}for(let[t,a]of Object.entries(this.consolidatedData))if(t.includes(o)||o.includes(t))return console.log(`✅ Found partial match: "${e}" -> "${t}"`),a;return console.log(`❌ No match found for: ${e}`),console.log(`🔍 Available players starting with similar names:`,Object.keys(this.consolidatedData).filter(e=>e.includes(o.split(" ")[0])).slice(0,5)),null}getPlayerProjectedPoints(e,t){let o=this.findPlayerByName(e,t);if(!o||!o.projections)return console.log(`⚠️ No player or projections found for: ${e} (${t})`),0;let a=t?.toLowerCase();console.log(`🔍 Looking for projections for ${e} at position: ${a}`),console.log(`🔍 Available projection keys:`,Object.keys(o.projections));let r=0;if("def"===a||"defense"===a){for(let t of(console.log(`🛡️ Processing DEFENSE player: ${e}`),["def","DEF","defense","Defense","DEFENSE"]))if(o.projections[t]?.fpts){r=o.projections[t].fpts,console.log(`✅ Found defense projections using key: ${t} = ${r}`);break}if(!r){for(let e of Object.keys(o.projections))if(e.toLowerCase().includes("def")){r=o.projections[e].fpts,console.log(`✅ Found defense projections using partial key: ${e} = ${r}`);break}}if(!r)for(let e of Object.keys(o.projections)){let t=o.projections[e];if(t&&"object"==typeof t&&t.fpts){r=t.fpts,console.log(`✅ Found defense projections using generic key: ${e} = ${r}`);break}}if(!r)for(let e of Object.keys(o.projections)){let t=o.projections[e];if("number"==typeof t&&t>0){r=t,console.log(`✅ Found defense projections using numeric key: ${e} = ${r}`);break}}!r&&"number"==typeof o.projections&&o.projections>0&&(r=o.projections,console.log(`✅ Found defense projections as direct number: ${r}`))}else r=o.projections[a]?.fpts;return r?(console.log(`✅ Projected points for ${e}: ${r}`),"number"==typeof r?r:parseFloat(r)):(console.log(`❌ No projected points found for ${e} at position ${a}`),console.log(`🔍 Player projections structure:`,o.projections),0)}getPlayerAdp(e){if(!this.findPlayerByName(e,""))return 0;let t=this.normalizePlayerName(e),o=this.adpData[t];if(!o){let e=t.split(" ");if(e.length>=2){let t=e[0],a=e[e.length-1];for(let[e,r]of Object.entries(this.adpData)){let s=e.split(" ");if(s.length>=2){let e=s[0],l=s[s.length-1];if(e===t&&l===a){o=r;break}}}}}let a=o?.adp_value;return a?parseFloat(a):0}getPlayerVorp(e){let t=this.normalizePlayerName(e);if(!t)return 0;let o=Array.isArray(this.vorpData)?this.vorpData.find(e=>this.normalizePlayerName(e.playerName||"")===t):void 0;return o?.vorp_score||o?.vorpScore?parseFloat(o.vorp_score||o.vorpScore):0}async analyzeDraft(e){await this.initialize();let t=this.parseSleeperDraftUrl(e);console.log(`Analyzing draft ID: ${t}`);let o=await this.fetchSleeperApi(`https://api.sleeper.app/v1/draft/${t}`),a=await this.fetchSleeperApi(`https://api.sleeper.app/v1/draft/${t}/picks`);console.log("\uD83D\uDD0D Draft data:",{id:o.id,type:o.type,status:o.status,metadata:o.metadata,settings:o.settings,league_id:o.league_id,slot_to_roster_id:o.slot_to_roster_id});let r={},s=o.slot_to_roster_id;if(!s)throw Error("No slot_to_roster_id found in draft data - this may not be a mock draft");if(console.log("\uD83E\uDDE0 Using smart username detection..."),console.log("\uD83D\uDD0D Draft type:",o.type),console.log("\uD83D\uDD0D Draft status:",o.status),console.log("\uD83D\uDD0D Draft metadata keys:",Object.keys(o.metadata||{})),console.log("\uD83D\uDD0D Draft settings keys:",Object.keys(o.settings||{})),"mock"===o.type||"complete"===o.status){for(let e of(console.log("\uD83D\uDD0D This appears to be a mock draft, extracting usernames from picks..."),a||[]))if(e.metadata&&Object.keys(e.metadata).length>0){let t=String(e.draft_slot);console.log(`🔍 Pick ${e.draft_slot} metadata:`,e.metadata);let o=e.metadata.user_id||e.metadata.username||e.metadata.display_name||e.metadata.name||e.metadata.user;o&&!r[t]&&(r[t]=o,console.log(`✅ Found username for slot ${t}: ${o}`))}}if(0===Object.keys(r).length&&o.metadata?.draft_order){console.log("\uD83D\uDD0D Checking draft metadata for user order...");let e=o.metadata.draft_order;console.log("\uD83D\uDD0D Draft order from metadata:",e),Array.isArray(e)&&e.forEach((e,t)=>{if(e&&"string"==typeof e&&e.trim()){let o=String(t);r[o]=e.trim(),console.log(`✅ Metadata mapped slot ${o} to: ${e.trim()}`)}})}if(0===Object.keys(r).length&&o.metadata?.team_names){console.log("\uD83D\uDD0D Checking for team names in metadata...");let e=o.metadata.team_names;console.log("\uD83D\uDD0D Team names from metadata:",e),Array.isArray(e)&&e.forEach((e,t)=>{if(e&&"string"==typeof e&&e.trim()){let o=String(t);r[o]=e.trim(),console.log(`✅ Team names mapped slot ${o} to: ${e.trim()}`)}})}if(0===Object.keys(r).length&&o.settings)for(let e of(console.log("\uD83D\uDD0D Checking draft settings for user info..."),Object.keys(o.settings))){let t=o.settings[e];if(Array.isArray(t)&&t.length>0&&"string"==typeof t[0]&&(console.log(`🔍 Found potential user array in settings.${e}:`,t),t.length===Object.keys(s).length)){t.forEach((e,t)=>{if(e&&"string"==typeof e&&e.trim()){let o=String(t);r[o]=e.trim(),console.log(`✅ Settings mapped slot ${o} to: ${e.trim()}`)}});break}}if(0===Object.keys(r).length&&o.metadata){for(let[e,t]of(console.log("\uD83D\uDD0D Checking all metadata fields for potential usernames..."),Object.entries(o.metadata)))if(Array.isArray(t)&&t.length>0&&"string"==typeof t[0]&&(console.log(`🔍 Found array in metadata.${e}:`,t),t.length===Object.keys(s).length&&t.every(e=>"string"==typeof e&&e.trim().length>0&&(e.includes("@")||e.length>3)))){t.forEach((t,o)=>{let a=String(o);r[a]=t.trim(),console.log(`✅ Metadata.${e} mapped slot ${a} to: ${t.trim()}`)});break}}if(0===Object.keys(r).length)for(let e of(console.log("\uD83D\uDD0D Checking for any other potential username sources..."),Object.keys(o))){let t=o[e];if(Array.isArray(t)&&t.length>0&&"string"==typeof t[0]&&(console.log(`🔍 Found array in draft.${e}:`,t),t.length===Object.keys(s).length)){t.forEach((t,o)=>{if(t&&"string"==typeof t&&t.trim()){let a=String(o);r[a]=t.trim(),console.log(`✅ Draft.${e} mapped slot ${a} to: ${t.trim()}`)}});break}}0===Object.keys(r).length&&(console.log("\uD83D\uDD0D No usernames found, generating mock usernames..."),Object.keys(s).forEach(e=>{let t=parseInt(e,10);r[e]=`DraftSlot${t+1}`,console.log(`🎭 Generated mock username for slot ${e}: DraftSlot${t+1}`)})),console.log("\uD83D\uDD0D Final slot to name mapping:",r),console.log("\uD83D\uDD0D Slot to roster mapping:",s),console.log("\uD83D\uDCCA USERNAME DETECTION SUMMARY:"),console.log(`   Total slots: ${Object.keys(s).length}`),console.log(`   Slots with names: ${Object.keys(r).length}`),console.log(`   Slots without names: ${Object.keys(s).length-Object.keys(r).length}`),0===Object.keys(r).length?(console.log("❌ NO USERNAMES FOUND - All strategies failed"),console.log("\uD83D\uDD0D This suggests this may be a mock draft without user information")):(console.log("✅ Usernames found:"),Object.entries(r).forEach(([e,t])=>{console.log(`   Slot ${e}: ${t}`)}));let l=await this.fetchSleeperApi("https://api.sleeper.app/v1/players/nfl"),n=e=>l?.[e],p={name:o.metadata?.name||`Draft ${t}`,teams:Object.keys(s).length,rounds:o.settings?.rounds||0,totalPicks:a?.length||0},d={};for(let e of(Object.entries(s).forEach(([e,t])=>{let o=r[String(e)]||`Team ${t}`;d[t]={teamId:t,teamName:o,draftSlot:parseInt(e,10),roster:[]},console.log(`🏈 Created team ${t} for slot ${e} with name: "${o}"`)}),a||[])){let t=n(String(e.player_id));if(!t)continue;let o=t.full_name||`${t.first_name||""} ${t.last_name||""}`.trim(),a=t.position||e.metadata?.position||"";(a?.toLowerCase()==="def"||a?.toLowerCase()==="defense")&&console.log(`🛡️ Processing DEFENSE player: ${o} at position: ${a}`);let r=this.getPlayerProjectedPoints(o,a),l=this.getPlayerAdp(o),i=this.getPlayerVorp(o),c=l>0?l-e.draft_slot:0,p={...e,metadata:t,playerName:o,position:a,projectedPoints:r,adpValue:l,vorpScore:i,draftValue:c,playerId:e.player_id},u=s[String(e.draft_slot)];u&&d[u]&&d[u].roster.push(p)}let u=new i,f=new c(Array.isArray(this.vorpData)?this.vorpData:[]);return{draftInfo:p,analysis:{teams:Object.entries(d).map(([e,t])=>{let o=u.calculateOptimalLineup(t.roster,{scoring:"ppr"}),a=f.calculatePositionGrades({roster:t.roster}),r=t.roster.map(e=>e.adpValue||0).filter(e=>0!==e),s=r.length>0?r.reduce((e,t)=>e+t,0)/r.length:0;return{teamId:Number(e),teamName:t.teamName,draftSlot:t.draftSlot,optimalLineup:o.optimalLineup,optimalLineupPoints:o.totalProjectedPoints,benchPlayers:o.benchPlayers,benchPoints:o.benchPoints,lineupAnalysis:o.analysis,positionGrades:a,totalProjectedPoints:o.totalProjectedPoints+o.benchPoints,averageProjectedPoints:t.roster.length>0?t.roster.reduce((e,t)=>e+(t.projectedPoints||0),0)/t.roster.length:0,averageAdpValue:s,averageVorpScore:t.roster.length>0?t.roster.reduce((e,t)=>e+(t.vorpScore||0),0)/t.roster.length:0,players:t.roster}})}}}constructor(){this.consolidatedData={},this.nameLookupIndex={},this.playerDetails={},this.vorpData={},this.adpData={}}}async function u(e){try{let{draftUrl:t}=await e.json();if(!t)return n.NextResponse.json({success:!1,error:"Draft URL is required"},{status:400});console.log("\uD83D\uDE80 Starting draft analysis for URL:",t);let o=new d,a=await o.analyzeDraft(t);return n.NextResponse.json({success:!0,message:"Draft analysis completed successfully",draftUrl:t,status:"completed",data:a})}catch(t){console.error("❌ Draft analysis failed:",t);let e=t instanceof Error?t.message:"Unknown error occurred";return n.NextResponse.json({success:!1,error:`Draft analysis failed: ${e}`},{status:500})}}function f(){return new Response("Method Not Allowed",{status:405,headers:{Allow:"POST"}})}let h=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/analyze-draft/route",pathname:"/api/analyze-draft",filename:"route",bundlePath:"app/api/analyze-draft/route"},resolvedPagePath:"/Users/kanikameister/Documents/ff_api_skeleton/app/api/analyze-draft/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:y}=h,D="/api/analyze-draft/route";function j(){return(0,l.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var o=e=>t(t.s=e),a=t.X(0,[276,972],()=>o(260));module.exports=a})();