"use strict";(()=>{var e={};e.id=47,e.ids=[47],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},260:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>P,patchFetch:()=>D,requestAsyncStorage:()=>g,routeModule:()=>f,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y});var r={};a.r(r),a.d(r,{GET:()=>h,POST:()=>d,runtime:()=>c});var o=a(9303),s=a(8716),l=a(670),n=a(7070);class i{getRosterRequirements(e="standard",t=12,a=16){let r={standard:{QB:1,RB:2,WR:2,TE:1,FLEX:1,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]},superflex:{QB:1,RB:2,WR:2,TE:1,FLEX:1,DEF:1,K:1,flexPositions:["QB","RB","WR","TE"],superflexPositions:[]},"2qb":{QB:2,RB:2,WR:2,TE:1,FLEX:1,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]},"2flex":{QB:1,RB:2,WR:2,TE:1,FLEX:2,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]},"robs-bullshit":{QB:2,RB:2,WR:3,TE:1,FLEX:2,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]}},o=r[e]||r.standard,s=Object.entries(o).filter(([e])=>!["flexPositions","superflexPositions"].includes(e)).reduce((e,[t,a])=>e+("number"==typeof a?a:0),0);return{...o,totalStarters:s,_metadata:{actualTeams:t,actualRounds:a,leagueType:e,calculatedAt:new Date().toISOString()}}}calculateOptimalLineup(e,t={}){let a=t.leagueType||"standard",r=t.teams||12,o=t.rounds||16,s=this.getRosterRequirements(a,r,o);console.log("\uD83D\uDD0D Calculating optimal lineup:",{leagueType:a,actualTeams:r,actualRounds:o,requirements:{...s,_metadata:s._metadata}});let l=this.groupPlayersByPosition(e),n={},i=new Set;if(console.log("\uD83D\uDD0D Filling required positions..."),Object.entries(s).forEach(([e,t])=>{if("totalStarters"!==e&&"flexPositions"!==e&&"superflexPositions"!==e&&(console.log(`🔍 Processing position: ${e}, count: ${t}`),"number"==typeof t&&t>0)){n[e]=[];let a=l[e]||[];console.log(`🔍 Available players for ${e}:`,a);let r=a.filter(e=>!i.has(e.playerId||e.playerName)).sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0)).slice(0,t);console.log(`🔍 Selected players for ${e}:`,r),n[e]=r,r.forEach(e=>i.add(e.playerId||e.playerName))}}),s.flexPositions){let e=s.flexPositions.flatMap(e=>(l[e]||[]).filter(e=>!i.has(e.playerId||e.playerName)));if(e.length>0){let t=e.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0];t&&(n.FLEX=[t],i.add(t.playerId||t.playerName),"superflex"===a?console.log(`🦸 Superflex FLEX: Selected ${t.position} ${t.playerName} with ${t.projectedPoints} points`):console.log(`🔄 Standard FLEX: Selected ${t.position} ${t.playerName} with ${t.projectedPoints} points`))}}if(("2flex"===a||"robs-bullshit"===a)&&2===s.FLEX){n.FLEX=[];let e=this.findBestFlexPlayer(l,i);e&&(n.FLEX.push(e),i.add(e.playerId||e.playerName),console.log(`🔄 FLEX 1: Selected ${e.position} ${e.playerName} with ${e.projectedPoints} points`));let t=this.findBestFlexPlayer(l,i);t&&(n.FLEX.push(t),i.add(t.playerId||t.playerName),console.log(`🔄 FLEX 2: Selected ${t.position} ${t.playerName} with ${t.projectedPoints} points`))}return Object.entries(s).forEach(([e,t])=>{"totalStarters"!==e&&"flexPositions"!==e&&"superflexPositions"!==e&&"number"==typeof t&&t>0&&!n[e]&&(n[e]=[])}),n}findBestSuperflexPlayer(e,t){let a=(e.QB||[]).filter(e=>!t.has(e.playerId||e.playerName)),r=(e.RB||[]).filter(e=>!t.has(e.playerId||e.playerName)),o=(e.WR||[]).filter(e=>!t.has(e.playerId||e.playerName)),s=(e.TE||[]).filter(e=>!t.has(e.playerId||e.playerName)),l=null;if(a.length>0&&(l=a.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0]),!l){let e=[...r,...o,...s];e.length>0&&(l=e.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0])}return l}findBestFlexPlayer(e,t){let a=(e.RB||[]).filter(e=>!t.has(e.playerId||e.playerName)),r=(e.WR||[]).filter(e=>!t.has(e.playerId||e.playerName)),o=(e.TE||[]).filter(e=>!t.has(e.playerId||e.playerName)),s=null;if(a.length>0&&(s=a.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0]),!s){let e=[...r,...o];e.length>0&&(s=e.sort((e,t)=>(t.projectedPoints||0)-(e.projectedPoints||0))[0])}return s}groupPlayersByPosition(e){let t={};return console.log("\uD83D\uDD0D Grouping players by position. Roster:",e),e.forEach(e=>{let a=(e.position||"").toUpperCase();if(console.log(`🔍 Player: ${e.playerName}, Position: ${a}, Raw position: ${e.position}`),!a){console.log(`⚠️ Skipping player ${e.playerName} - no position`);return}t[a]||(t[a]=[]),t[a].push(e)}),console.log("\uD83D\uDD0D Grouped players:",t),t}getBenchPlayers(e,t){let a=new Set;return Object.values(t).forEach(e=>{Array.isArray(e)&&e.forEach(e=>{a.add(e.playerId||e.playerName)})}),e.filter(e=>!a.has(e.playerId||e.playerName))}calculateTotalProjectedPoints(e){if(Array.isArray(e))return e.reduce((e,t)=>e+(t.projectedPoints||0),0);let t=0;return Object.values(e).forEach(e=>{Array.isArray(e)&&(t+=e.reduce((e,t)=>e+(t.projectedPoints||0),0))}),t}analyzeLineup(e,t={}){let a=t.leagueType||"standard";t.superflexSlots;let r=t.teams||12,o=this.getRosterRequirements(a,r,16);return{totalStarters:o.totalStarters,leagueType:a,superflexSlots:o.superflexPositions?o.superflexPositions.length:0,requirements:o,positionCounts:Object.entries(o).filter(([e])=>!["totalStarters","flexPositions","superflexPositions"].includes(e)).reduce((e,[t,a])=>({...e,[t]:a}),{})}}calculateReplacementBaselines(e={}){e.leagueType;let t=e.superflexSlots||0,a=e.teams||12;return{QB:a*(1+t),RB:2*a,WR:2*a,TE:1*a,K:1*a,DEF:1*a}}}class p{constructor(e=[]){this.vorpLookup={},this.leagueAverages={},this.leagueStdDevs={},e.forEach(e=>{let t=(e.playerName||"").toLowerCase(),a=e.vorpScore??e.vorp_score??0;t&&(this.vorpLookup[t]=Number(a))})}calculatePositionGrades(e,t={}){let a=t.leagueType||"standard",r=t.teams||12,o=t.rounds||16,s=this.getPositionRequirements(a,r,o);return console.log("\uD83D\uDCCA Position grade calculation:",{leagueType:a,actualTeams:r,actualRounds:o,positionRequirements:{...s,_metadata:s._metadata}}),e.map(e=>{let t=this.analyzeRosterConstruction(e,s,a);return{...e,positionGrades:t}}).map(e=>{let t=this.calculateOverallRosterGrade(e.positionGrades);return{...e,overallGrade:t}})}analyzeRosterConstruction(e,t,a){let r={positionalBalance:this.analyzePositionalBalance(e,t,a),depthStrategy:this.analyzeDepthStrategy(e,t),startingLineupStrength:this.analyzeStartingLineupStrength(e,t),adpValue:this.analyzeADPValue(e),keeperValue:this.analyzeKeeperValue(e),overallScore:0,grade:"F"};return r.overallScore=.3*r.positionalBalance.score+.25*r.depthStrategy.score+.25*r.startingLineupStrength.score+.15*r.adpValue.score+.05*r.keeperValue.score,r.grade=this.scoreToGrade(r.overallScore),r}analyzePositionalBalance(e,t,a){let r=e.roster||[],o={},s={};r.forEach(e=>{let t=e.position||"UNK";o[t]||(o[t]=0,s[t]=[]),o[t]++,s[t].push(e.projectedPoints||0)});let l=100,n=[];return Object.entries(t).forEach(([e,t])=>{if(["flexPositions","superflexPositions","totalStarters","_metadata"].includes(e))return;let a=o[e]||0;if(a<t){let r=t-a;l-=15*r,n.push(`${e}: Missing ${r} starter(s)`)}else if(a>t+2){let r=a-t-2;l-=8*r,n.push(`${e}: ${r} too many players`)}}),["QB","RB","WR","TE"].forEach(e=>{o[e]&&0!==o[e]||(l-=25,n.push(`${e}: Position completely missing`))}),"superflex"===a&&(!o.QB||o.QB<2)&&(l-=20,n.push("Superflex: Insufficient QB depth")),"2qb"===a&&(!o.QB||o.QB<2)&&(l-=30,n.push("2QB: Must have exactly 2 QBs")),{score:Math.max(0,l),issues:n,positionCounts:o,analysis:`Positional balance analysis: ${n.length>0?n.join(", "):"Well balanced"}`}}analyzeDepthStrategy(e,t){let a=e.roster||[],r=a.slice(0,t.totalStarters||9),o=a.slice(t.totalStarters||9),s=100,l=[];if(0===o.length)s-=30,l.push("No bench players");else{let e=o.map(e=>e.projectedPoints||0),t=e.reduce((e,t)=>e+t,0)/e.length;t<80?(s-=15,l.push("Weak bench quality")):t>120&&(s+=10,l.push("Strong bench quality")),[...new Set(o.map(e=>e.position))].length<3&&(s-=10,l.push("Limited bench position diversity"))}let n=r.filter(e=>60>(e.projectedPoints||0));return n.length>2&&(s-=20,l.push(`${n.length} weak starters`)),{score:Math.max(0,s),analysis:l.length>0?l.join(", "):"Good depth strategy",benchSize:o.length,avgBenchPoints:o.length>0?o.map(e=>e.projectedPoints||0).reduce((e,t)=>e+t,0)/o.length:0}}analyzeStartingLineupStrength(e,t){let a=e.roster||[],r=a.slice(0,t.totalStarters||9);a.slice(t.totalStarters||9);let o=100,s=[],l=r.map(e=>e.projectedPoints||0).reduce((e,t)=>e+t,0)/r.length;l<100&&(o-=20,s.push(`Average starter points (${l.toFixed(0)}) is below 100`)),l>120&&(o+=10,s.push(`Average starter points (${l.toFixed(0)}) is above 120`));let n=r.filter(e=>60>(e.projectedPoints||0));return n.length>2&&(o-=20,s.push(`${n.length} weak starters`)),{score:Math.max(0,o),analysis:s.length>0?s.join(", "):"Strong starting lineup",avgStarterPoints:r.length>0?r.map(e=>e.projectedPoints||0).reduce((e,t)=>e+t,0)/r.length:0}}analyzeADPValue(e){let t=e.roster||[],a=100,r=[],o=[],s=[];return t.forEach(e=>{let t=e.adpValue||0,s=e.round||0;if(e.projectedPoints,t>0&&s>0){let l=Math.ceil(t/12),n=l-s;n>2?(a-=8,o.push(`${e.playerName} (Round ${s}, ADP ~${l})`)):n<-2&&(a+=5,r.push(`${e.playerName} (Round ${s}, ADP ~${l})`))}}),r.length>o.length?(a+=10,s.push(`More steals (${r.length}) than reaches (${o.length})`)):o.length>r.length&&(a-=10,s.push(`More reaches (${o.length}) than steals (${r.length})`)),{score:Math.max(0,Math.min(100,a)),steals:r,reaches:o,analysis:s.length>0?s.join(", "):"Balanced ADP strategy",stealCount:r.length,reachCount:o.length}}analyzeKeeperValue(e){return{score:100,analysis:"No keeper analysis available",keepers:[],keeperAdvantage:0}}calculateOverallRosterGrade(e){return{score:Math.round(100*e.overallScore)/100,grade:e.grade,summary:this.generateRosterSummary(e),breakdown:{positionalBalance:e.positionalBalance,depthStrategy:e.depthStrategy,adpValue:e.adpValue,keeperValue:e.keeperValue}}}generateRosterSummary(e){let{positionalBalance:t,depthStrategy:a,startingLineupStrength:r,adpValue:o}=e,s=`Overall Roster Grade: ${e.grade} (${Math.round(100*e.overallScore)/100}/100)

`;return s+=`Positional Balance: ${t.score}/100
`,t.issues.length>0&&(s+=`Issues: ${t.issues.join(", ")}
`),s+=`
Starting Lineup Strength: ${r.score}/100
Average Starter Points: ${r.avgStarterPoints.toFixed(1)}
Analysis: ${r.analysis}

Depth Strategy: ${a.score}/100
Bench Size: ${a.benchSize} players
Analysis: ${a.analysis}

Draft Value: ${o.score}/100
Steals: ${o.stealCount}, Reaches: ${o.reachCount}
Analysis: ${o.analysis}`}scoreToGrade(e){return e>=90?"A+":e>=85?"A":e>=80?"A-":e>=75?"B+":e>=70?"B":e>=65?"B-":e>=60?"C+":e>=55?"C":e>=50?"C-":e>=45?"D+":e>=40?"D":e>=35?"D-":"F"}calculateLeagueStats(e,t){let a={};t.forEach(e=>{a[e]={points:[],vorp:[]}}),e.forEach(e=>{(e.roster||[]).forEach(e=>{let t=(e.position||"").toUpperCase();if(!t||!a[t])return;let r=e.projectedPoints||0,o=this.getPlayerVorp(e.playerName||e.name||"");a[t].points.push(r),a[t].vorp.push(o)})}),Object.keys(a).forEach(e=>{let t=a[e].points.filter(e=>e>0),r=a[e].vorp.filter(e=>0!==e);t.length>0&&(this.leagueAverages[e]=t.reduce((e,t)=>e+t,0)/t.length,this.leagueStdDevs[e]=this.calculateStdDev(t,this.leagueAverages[e])),r.length>0&&(this.leagueAverages[`${e}_VORP`]=r.reduce((e,t)=>e+t,0)/r.length,this.leagueStdDevs[`${e}_VORP`]=this.calculateStdDev(r,this.leagueAverages[`${e}_VORP`]))})}calculateStdDev(e,t){return e.length<=1?0:Math.sqrt(e.reduce((e,a)=>e+Math.pow(a-t,2),0)/e.length)}getPlayerVorp(e){if(!e)return 0;let t=e.toLowerCase();return this.vorpLookup[t]||0}getPositionRequirements(e="standard",t=12,a=16){let r={standard:{QB:1,RB:2,WR:2,TE:1,FLEX:1,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]},superflex:{QB:1,RB:2,WR:2,TE:1,FLEX:1,DEF:1,K:1,flexPositions:["QB","RB","WR","TE"],superflexPositions:[]},"2qb":{QB:2,RB:2,WR:2,TE:1,FLEX:1,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]},"2flex":{QB:1,RB:2,WR:2,TE:1,FLEX:2,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]},"robs-bullshit":{QB:2,RB:2,WR:3,TE:1,FLEX:2,DEF:1,K:1,flexPositions:["RB","WR","TE"],superflexPositions:[]}},o=r[e]||r.standard,s=Object.entries(o).filter(([e])=>!["flexPositions","superflexPositions"].includes(e)).reduce((e,[t,a])=>e+("number"==typeof a?a:0),0);return{...o,totalStarters:s,_metadata:{actualTeams:t,actualRounds:a,leagueType:e,calculatedAt:new Date().toISOString()}}}calculateReplacementBaselines(e={}){e.leagueType;let t=e.superflexSlots||0,a=e.teams||12;return{QB:a*(1+t),RB:2*a,WR:2*a,TE:1*a,K:1*a,DEF:1*a}}}let c="nodejs";class u{async initialize(){try{console.log("\uD83D\uDE80 Initializing Draft Analyzer...");let[e,t,r,o]=await Promise.all([a.e(297).then(a.t.bind(a,9297,19)),a.e(266).then(a.t.bind(a,1266,19)),a.e(101).then(a.t.bind(a,101,19)),a.e(865).then(a.t.bind(a,5865,19))]);console.log("\uD83D\uDD0D Loaded modules:",{masterPlayers:!!e,nameLookup:!!t,vorpData:!!r,adpData:!!o});let s=e.default.players;console.log("\uD83D\uDD0D Master players structure:",{hasDefault:!!e.default,hasPlayers:!!s,playerCount:s?.length||0,samplePlayer:s?.[0]}),this.consolidatedData={},s.forEach(e=>{e.full_name&&(this.consolidatedData[e.full_name.toLowerCase()]=e,e.player_id&&(this.consolidatedData[e.player_id.toLowerCase()]=e))}),this.nameLookupIndex=t.default,this.vorpData=r.default.vorpScores||r.default,this.adpData={};let l=o.default.players||[];console.log("\uD83D\uDD0D ADP data structure:",{hasDefault:!!o.default,hasPlayers:!!l,playerCount:l?.length||0,samplePlayer:l?.[0]}),l.forEach(e=>{e.full_name&&(this.adpData[e.full_name.toLowerCase()]=e)}),console.log(`✅ Draft Analyzer initialized with ${Object.keys(this.consolidatedData).length} players and ${Object.keys(this.adpData).length} ADP records.`),console.log(`🔍 Sample consolidated players:`,Object.keys(this.consolidatedData).slice(0,5)),console.log(`🔍 Sample ADP players:`,Object.keys(this.adpData).slice(0,5))}catch(e){throw console.error("❌ Failed to initialize Draft Analyzer:",e),Error("Failed to load necessary data for analysis.")}}async fetchSleeperApi(e){console.log(`🔍 Fetching from Sleeper API: ${e}`);let t=await fetch(e);if(!t.ok)throw Error(`Failed to fetch from Sleeper API: ${t.statusText}`);let a=await t.json();return console.log(`✅ Sleeper API response:`,{url:e,status:t.status,dataType:Array.isArray(a)?"array":"object",dataLength:Array.isArray(a)?a.length:Object.keys(a).length,sampleData:Array.isArray(a)?a.slice(0,2):Object.keys(a).slice(0,5)}),a}parseSleeperDraftUrl(e){let t=e.match(/sleeper\.(?:com|app)\/draft\/nfl\/([a-zA-Z0-9]+)/);if(!t||!t[1])throw Error("Invalid Sleeper mock draft URL format. Expected format: https://sleeper.app/draft/nfl/{draft_id}");return t[1]}normalizePlayerName(e){return e?e.toLowerCase().replace(/\s+(jr\.?|sr\.?|ii|iii|iv|v|vi|vii|viii|ix|x)\s*$/i,"").replace(/\s+/g," ").trim():""}findPlayerByName(e,t){if(!e)return null;let a=this.normalizePlayerName(e);console.log(`🔍 Looking for player: "${e}" -> normalized: "${a}"`);let r=this.consolidatedData[a];if(r)return console.log(`✅ Found exact match: ${e}`),r;if(r=this.consolidatedData[e.toLowerCase()])return console.log(`✅ Found exact match with original name: ${e}`),r;let o=a.split(" ");if(o.length>=2){let t=o[0],a=o[o.length-1];for(let[r,o]of(console.log(`🔍 Trying fuzzy match: firstName="${t}", lastName="${a}"`),Object.entries(this.consolidatedData))){let s=r.split(" ");if(s.length>=2){let l=s[0],n=s[s.length-1];if(l===t&&n===a)return console.log(`✅ Found fuzzy match: "${e}" -> "${r}"`),o}}}for(let[t,r]of Object.entries(this.consolidatedData))if(t.includes(a)||a.includes(t))return console.log(`✅ Found partial match: "${e}" -> "${t}"`),r;return console.log(`❌ No match found for: ${e}`),console.log(`🔍 Available players starting with similar names:`,Object.keys(this.consolidatedData).filter(e=>e.includes(a.split(" ")[0])).slice(0,5)),null}getPlayerProjectedPoints(e,t){let a=this.findPlayerByName(e,t);if(!a||!a.projections)return console.log(`⚠️ No player or projections found for: ${e} (${t})`),0;let r=t?.toLowerCase();console.log(`🔍 Looking for projections for ${e} at position: ${r}`),console.log(`🔍 Available projection keys:`,Object.keys(a.projections));let o=0;if("def"===r||"defense"===r){for(let t of(console.log(`🛡️ Processing DEFENSE player: ${e}`),["def","DEF","defense","Defense","DEFENSE"]))if(a.projections[t]?.fpts){o=a.projections[t].fpts,console.log(`✅ Found defense projections using key: ${t} = ${o}`);break}if(!o){for(let e of Object.keys(a.projections))if(e.toLowerCase().includes("def")){o=a.projections[e].fpts,console.log(`✅ Found defense projections using partial key: ${e} = ${o}`);break}}if(!o)for(let e of Object.keys(a.projections)){let t=a.projections[e];if(t&&"object"==typeof t&&t.fpts){o=t.fpts,console.log(`✅ Found defense projections using generic key: ${e} = ${o}`);break}}if(!o)for(let e of Object.keys(a.projections)){let t=a.projections[e];if("number"==typeof t&&t>0){o=t,console.log(`✅ Found defense projections using numeric key: ${e} = ${o}`);break}}!o&&"number"==typeof a.projections&&a.projections>0&&(o=a.projections,console.log(`✅ Found defense projections as direct number: ${o}`))}else o=a.projections[r]?.fpts;return o?(console.log(`✅ Projected points for ${e}: ${o}`),"number"==typeof o?o:parseFloat(o)):(console.log(`❌ No projected points found for ${e} at position ${r}`),console.log(`🔍 Player projections structure:`,a.projections),0)}getPlayerAdp(e){if(!this.findPlayerByName(e,""))return 0;let t=this.normalizePlayerName(e),a=this.adpData[t];if(!a){let e=t.split(" ");if(e.length>=2){let t=e[0],r=e[e.length-1];for(let[e,o]of Object.entries(this.adpData)){let s=e.split(" ");if(s.length>=2){let e=s[0],l=s[s.length-1];if(e===t&&l===r){a=o;break}}}}}let r=a?.adp_value;return r?parseFloat(r):0}getPlayerVorp(e){let t=this.normalizePlayerName(e);if(!t)return 0;let a=Array.isArray(this.vorpData)?this.vorpData.find(e=>this.normalizePlayerName(e.playerName||"")===t):void 0;return a?.vorp_score||a?.vorpScore?parseFloat(a.vorp_score||a.vorpScore):0}async analyzeDraft(e,t="standard"){await this.initialize(),console.log("\uD83D\uDD0D Fetching draft data from Sleeper...");let a=this.parseSleeperDraftUrl(e),r=await this.fetchSleeperApi(`https://api.sleeper.app/v1/draft/${a}`),o=await this.fetchSleeperApi(`https://api.sleeper.app/v1/draft/${a}/picks?limit=1000`);console.log("\uD83D\uDCCA Draft data fetched:",{draftName:r.name,teams:r.teams?.length||0,rounds:r.settings?.rounds||0,picks:o?.length||0,expectedPicks:(r.teams?.length||0)*(r.settings?.rounds||0)});let s=await this.buildTeamRosters(r,o),l=this.analyzeTeams(s,t);return{draftInfo:{name:r.name,teams:r.teams?.length||0,rounds:r.settings?.rounds||0,totalPicks:o?.length||0},...l}}analyzeTeams(e,t="standard"){let a=new i,r=new p,o=Object.keys(e).length,s=Math.max(...Object.values(e).map(e=>Math.max(...(e.roster||[]).map(e=>e.round||0))),16);console.log("\uD83D\uDCCA Draft dimensions:",{actualTeams:o,actualRounds:s});let l=Object.entries(e).map(([r,l])=>{let n=a.calculateOptimalLineup(l.roster,{leagueType:t,scoring:"ppr",teams:o,rounds:s}),i=l.roster.map(e=>e.adpValue||0).filter(e=>0!==e),p=i.length>0?i.reduce((e,t)=>e+t,0)/i.length:0,c=l.roster.map(e=>e.vorpScore||0).filter(e=>0!==e),u=c.length>0?c.reduce((e,t)=>e+t,0)/c.length:0,d=a.calculateTotalProjectedPoints(n),h=a.getBenchPlayers(l.roster,n),f=a.calculateTotalProjectedPoints(h),g=a.analyzeLineup(n,{leagueType:t,scoring:"ppr",teams:Object.keys(e).length});return{teamId:r,teamName:l.teamName,draftSlot:l.draftSlot,roster:l.roster,optimalLineup:n,optimalLineupPoints:d,benchPlayers:h,benchPoints:f,totalProjectedPoints:d+f,averageAdpValue:p,averageVorpScore:u,lineupAnalysis:g}});return{analysis:{teams:r.calculatePositionGrades(l,{leagueType:t,scoring:"ppr",teams:Object.keys(e).length}).map(e=>{let t=l.find(t=>t.teamId===e.teamId);return{teamId:e.teamId,teamName:e.teamName,draftSlot:t?.draftSlot||0,optimalLineup:t?.optimalLineup||{},optimalLineupPoints:t?.optimalLineupPoints||0,benchPlayers:t?.benchPlayers||[],benchPoints:t?.benchPoints||0,positionGrades:e.positionGrades||{},overallGrade:e.overallGrade||{grade:"—",score:0},totalProjectedPoints:(t?.optimalLineupPoints||0)+(t?.benchPoints||0),averageProjectedPoints:t?.roster?.length?t.roster.reduce((e,t)=>e+(t.projectedPoints||0),0)/t.roster.length:0,averageAdpValue:t?.averageAdpValue||0,averageVorpScore:t?.averageVorpScore||0,players:t?.roster||[],roster:t?.roster||[]}})}}}async buildTeamRosters(e,t){let a=e.slot_to_roster_id;if(!a)throw Error("No slot_to_roster_id found in draft data - this may not be a mock draft");let r={};e.metadata?.draft_order_by_roster_id?Object.entries(e.metadata.draft_order_by_roster_id).forEach(([e,t])=>{r[t]=`Team ${parseInt(e)+1}`}):Object.keys(a).forEach(e=>{r[e]=`Team ${parseInt(e)+1}`});let o=await this.fetchSleeperApi("https://api.sleeper.app/v1/players/nfl"),s=e=>o?.[e],l={};return console.log("\uD83D\uDD0D Building team rosters from draft picks..."),console.log("\uD83D\uDD0D Total draft picks:",t.length),console.log("\uD83D\uDD0D Slot to roster mapping:",a),t.forEach((e,t)=>{let o;let n=t+1,i=Object.keys(a).length,p=Math.floor((n-1)/i)+1,c=(n-1)%i,u=a[(o=p%2==1?c:i-1-c).toString()];if(!u){console.warn(`No roster ID found for team slot ${o} in round ${p}`);return}l[u]||(l[u]={teamId:u,teamName:r[o.toString()]||`Team ${u}`,draftSlot:o,roster:[]});let d=s(e.player_id);if(!d){console.warn(`No player data found for ID ${e.player_id}`);return}let h=this.enhancePlayerData(d,e,p);l[u].roster.push(h),console.log(`🔍 Pick ${n} (Round ${p}, Pick ${c+1}): ${d.full_name} -> Team ${u}`)}),console.log("\uD83D\uDD0D Team roster summary:"),Object.entries(l).forEach(([e,t])=>{console.log(`🔍 Team ${e}: ${t.roster.length} players`)}),l}enhancePlayerData(e,t,a){let r=e.full_name||`${e.first_name||""} ${e.last_name||""}`.trim(),o=e.position||t.metadata?.position||"",s=this.getPlayerProjectedPoints(r,o),l=this.getPlayerAdp(r),n=this.getPlayerVorp(r),i=l>0?l-t.draft_slot:0;return{...t,metadata:e,playerName:r,position:o,projectedPoints:s,adpValue:l,vorpScore:n,draftValue:i,playerId:t.player_id,round:a}}constructor(){this.consolidatedData={},this.nameLookupIndex={},this.playerDetails={},this.vorpData={},this.adpData={}}}async function d(e){try{let{draftUrl:t,leagueType:a="standard"}=await e.json();if(!t)return n.NextResponse.json({success:!1,error:"Draft URL is required"});console.log("\uD83D\uDE80 Starting draft analysis..."),console.log("\uD83D\uDD0D Draft URL:",t),console.log("\uD83C\uDFC8 League Type:",a);let r=new u;await r.initialize();let o=await r.analyzeDraft(t,a);return n.NextResponse.json({success:!0,data:o})}catch(e){return console.error("❌ Error in draft analysis:",e),n.NextResponse.json({success:!1,error:e instanceof Error?e.message:"Unknown error occurred"})}}function h(){return new Response("Method Not Allowed",{status:405,headers:{Allow:"POST"}})}let f=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/analyze-draft/route",pathname:"/api/analyze-draft",filename:"route",bundlePath:"app/api/analyze-draft/route"},resolvedPagePath:"/Users/kanikameister/Documents/ff_api_skeleton/app/api/analyze-draft/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:g,staticGenerationAsyncStorage:y,serverHooks:m}=f,P="/api/analyze-draft/route";function D(){return(0,l.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[276,972],()=>a(260));module.exports=r})();